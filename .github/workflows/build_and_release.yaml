name   名字: Build and release Aseprite名称：构建并发布Aseprite

on   在:
  push   推:
    branches   分支机构:
      - main   ——主要
    paths   路径:
      - 'BuildLog.md'
  workflow_dispatch:
env:
  BUILD_TYPE: Release   BUILD_TYPE:释放

jobs   工作:
  fetch-aseprite-info:
    name   名字: Fetch deps info   name：获取深度信息
    runs-on   运行在: ubuntu-latest   上运行:ubuntu-latest
    outputs   输出:
      download-link   上述英文: $下载链接：${{steps. aseprites -link.outputs。上述}}{{ steps.aseprite-link.outputs.download-link }}
      release-tag   版本标记: $Release-tag: ${{steps.asepri -link.outputs。版本标记}}{{ steps.aseprite-link.outputs.release-tag }}
    steps   步骤:
      - name   名字: Fetch Aseprite release link—name：获取Aseprite发布链接
        id: aseprite-link
        uses   使用: a1393323447/fetch-release@main用途:a1393323447 / fetch-release@main
        with   与:
            group   集团: aseprite   aseprite group):
            repo   回购: aseprite   回购:aseprite
            match   匹配: Aseprite-.*?-Source.zip匹配:Aseprite - . * ? -Source.zip

  create-release   创建发布:
    name   名字: Create Release   名称：创建发布
    runs-on   运行在: ubuntu-latest   上运行:ubuntu-latest
    needs   需要: fetch-aseprite-info需求:fetch-aseprite-info
    permissions   权限:
      contents   内容: write   内容:写
    outputs   输出:
      download-link   上述英文: $下载链接：${{needs.fetch-aseprite-info.outputs。上述}}{{ needs.fetch-aseprite-info.outputs.download-link }}
      release-tag   版本标记: $Release-tag: ${{needs.fetch-aseprite-info.outputs。版本标记}}{{ needs.fetch-aseprite-info.outputs.release-tag }}
    steps   步骤:
      - uses   使用: actions/checkout@v2-使用：actions/checkout@v2
      - uses   使用: ncipollo/release-action@v1-使用：ncipollo/release-action@v1
        with   与:
          tag   标签: $标签：${{needs.fetch-aseprite-info.outputs。版本标记}}{{ needs.fetch-aseprite-info.outputs.release-tag }}
          body   身体: Aseprite-$body: Aseprite-${{needs.fetch-aseprite-info.outputs。版本标记}}{{ needs.fetch-aseprite-info.outputs.release-tag }}
          skipIfReleaseExists: true   真正的
          token   令牌: $Token: ${{secrets。GITHUB_TOKEN}}{{ secrets.GITHUB_TOKEN }}

  build-aseprite:
    name   名字: Build Aseprite   名称：构建Aseprite
    needs   需要: create-release   需求:创建发布
    permissions   权限:
      contents   内容: write   内容:写
    runs-on   运行在: $运行：${{矩阵。os}}{{ matrix.os }}
    strategy   策略:
        matrix   矩阵:
          os   的: [ windows-latest操作系统：[windows-最新 ]
        fail-fast   快速失败: false   假
    steps   步骤:
      - name   名字: Install Dependencies—name：安装依赖项
        if   如果: runner.os ==    如果:跑步。os == ‘Linux’'Linux'   “Linux”
        shell   壳牌: bash   bash shell:
        run   运行: |
          sudo apt-get update -qq   执行命令apt-get update -qq
          sudo apt-get install -y \
            libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
            libx11-dev libxcursor-dev libxi-dev libxrandr-dev libgl1-mesa-dev \
            libfontconfig1-dev
      - uses: actions/checkout@v4
      - name: Install Aseprite
        shell: bash
        run: |
          git clone --recurse-submodules -j8 https://github.com/aseprite/aseprite --branch ${{ needs.create-release.outputs.release-tag }}
      - name: Install Skia
        working-directory: aseprite
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]] ; then
            choco install wget -y --no-progress
            wget https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Windows-Release-x64.zip
            unzip Skia-Windows-Release-x64.zip -d skia
          elif [[ "${{ runner.os }}" == "macOS" ]] ; then
            wget https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-macOS-Release-arm64.zip
            unzip Skia-macOS-Release-arm64.zip -d skia
          else
            wget https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Linux-Release-x64.zip
            unzip Skia-Linux-Release-x64.zip -d skia
          fi
      - uses: aseprite/get-ninja@main
      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
      - name: Generating Makefiles
        shell: bash
        working-directory: aseprite
        run: |
          export enable_ccache=off
          export laf_backend=skia
          export enable_scripting=on

          if [[ "${{ runner.os }}" == "macOS" ]] ; then
            export skia_arch=arm64
          else
            export skia_arch=x64
          fi

          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
            -DENABLE_TESTS=OFF \
            -DENABLE_SCRIPTING=$enable_scripting \
            -DENABLE_CCACHE=$enable_ccache \
            -DLAF_BACKEND=$laf_backend \
            -DSKIA_DIR=$(realpath skia) \
            -DOPENSSL_USE_STATIC_LIBS=ON \
            -DSKIA_LIBRARY_DIR=$(realpath skia/out/Release-$skia_arch)
      - name: Compiling
        shell: bash
        working-directory: aseprite
        run: |
          cd build && ninja
      - name: Clean Up Build folder
        working-directory: aseprite/build/bin
        shell: bash
        run: find . -mindepth 1 ! \( -name 'aseprite' -o -name 'aseprite.exe' -o -name 'data' -prune \) -exec rm -rf {} +
      - name: Make portable zip
        working-directory: aseprite/build/bin
        run: echo '# This file is here so Aseprite behaves as a portable program' > aseprite.ini
      - name: Create release
        working-directory: aseprite/build/bin
        run: 7z -tzip a Aseprite-${{ needs.create-release.outputs.release-tag }}-${{ runner.os }}.zip *
      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: aseprite/build/bin/Aseprite-${{ needs.create-release.outputs.release-tag }}-${{ runner.os }}.zip
          asset_name: Aseprite-${{ needs.create-release.outputs.release-tag }}-${{ runner.os }}.zip
          tag: ${{ needs.create-release.outputs.release-tag }}
